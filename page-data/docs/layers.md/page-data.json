{"componentChunkName":"component---src-templates-doc-template-js","path":"/docs/layers.md","result":{"data":{"markdownRemark":{"html":"<h1 id=\"layers\" style=\"position:relative;\"><a href=\"#layers\" aria-label=\"layers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Layers</h1>\n<p>Layers are an useful feature that lets you group renderization by context, as well as allow you yo pre-render things. That enables, for example, the renderization in memory of parts of your game that don't change much, like a background, and by doing that, freeing resources for more dynamic content that needs to be rendered every loop cycle.</p>\n<p>There are two types of layers on Flame: <code class=\"language-text\">DynamicLayer</code> (for things that are moving or changing) and <code class=\"language-text\">PreRenderedLayer</code> (for things that are static).</p>\n<h2 id=\"dynamiclayer\" style=\"position:relative;\"><a href=\"#dynamiclayer\" aria-label=\"dynamiclayer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DynamicLayer</h2>\n<p>Dynamic layers are layers that are rendered every time that they are draw on the canvas. As the name suggests, it is meant for dynamic content and is most useful to group renderizations that are of the same context.</p>\n<p>Usage example:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">GameLayer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DynamicLayer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> MyGame game<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">GameLayer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">drawLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    game<span class=\"token punctuation\">.</span>playerSprite<span class=\"token punctuation\">.</span><span class=\"token function\">renderRect</span><span class=\"token punctuation\">(</span>\n      canvas<span class=\"token punctuation\">,</span>\n      game<span class=\"token punctuation\">.</span>playerRect<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    game<span class=\"token punctuation\">.</span>enemySprite<span class=\"token punctuation\">.</span><span class=\"token function\">renderRect</span><span class=\"token punctuation\">(</span>\n      canvas<span class=\"token punctuation\">,</span>\n      game<span class=\"token punctuation\">.</span>enemyRect<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyGame</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Other methods ommited...</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>Canvas canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gameLayer<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// x and y can be provided as optional position arguments</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"prerenderedlayer\" style=\"position:relative;\"><a href=\"#prerenderedlayer\" aria-label=\"prerenderedlayer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PreRenderedLayer</h2>\n<p>Pre-rendered layers are layers that are rendered only once, cached in memory and then just replicated on the game canvas afterwards. They are most useful to cache content that don't change during the game, like a background for example.</p>\n<p>Usage example:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BackgroundLayer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PreRenderedLayer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> Sprite sprite<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">BackgroundLayer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">drawLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    sprite<span class=\"token punctuation\">.</span><span class=\"token function\">renderRect</span><span class=\"token punctuation\">(</span>\n      canvas<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">const</span> Rect<span class=\"token punctuation\">.</span><span class=\"token function\">fromLTWH</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyGame</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Other methods ommited...</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>Canvas canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    backgroundLayer<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// x and y can be provided as optional position arguments</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"layer-processors\" style=\"position:relative;\"><a href=\"#layer-processors\" aria-label=\"layer processors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Layer Processors</h2>\n<p>Flame also provides a way to add processors on your layer, which are ways to add effects on the entire layer. At the moment, out of the box, only the <code class=\"language-text\">ShadowProcessor</code> is available, this processor renders a cool back drop shadow on your layer.</p>\n<p>To add processors to your layer, just add them to the layer <code class=\"language-text\">preProcessors</code> or <code class=\"language-text\">postProcessors</code> list. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">// Works the same for both DynamicLayer and PreRenderedLayer</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BackgroundLayer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PreRenderedLayer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> Sprite sprite<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">BackgroundLayer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    preProcessors<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token function\">ShadowProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">drawLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ommited */</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Custom processors can be creted by extending the <code class=\"language-text\">LayerProcessor</code> class.</p>\n<p>You can check an working example of layers <a href=\"https://github.com/flame-engine/flame/blob/master/doc/examples/layers\">here</a>.</p>","frontmatter":{"path":"/docs/layers.md","title":"Layers"}}},"pageContext":{}},"staticQueryHashes":["3000541721","3000541721","3595947586"]}