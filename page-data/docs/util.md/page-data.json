{"componentChunkName":"component---src-templates-doc-template-js","path":"/docs/util.md","result":{"data":{"markdownRemark":{"html":"<h1 id=\"util\" style=\"position:relative;\"><a href=\"#util\" aria-label=\"util permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Util</h1>\n<p>Some stuff just doesn't fit anywhere else.</p>\n<h2 id=\"position\" style=\"position:relative;\"><a href=\"#position\" aria-label=\"position permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Position</h2>\n<p>Throughout the variety of modules needed to build a game, Dart and Flutter have a few different classes to handle the concept of a 2D double point; specially common in the APIs are math.Point and ui.Offset.</p>\n<p>The Position class is an utility class that helps by allowing easy conversions to and from these type.</p>\n<p>It also differs from the default implementations provided (math.Point and ui.Offset) as it's mutable and offers some useful methods for manipulation.</p>\n<h2 id=\"util-class\" style=\"position:relative;\"><a href=\"#util-class\" aria-label=\"util class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Util Class</h2>\n<p>This class, accessible via <code class=\"language-text\">Flame.util</code>, has some sparse functions that are independent and good to have.</p>\n<p>It is recommended that the functions in this class be called via the <code class=\"language-text\">Flame.util</code> getter to utilize a single instance prepared by the Flame engine.</p>\n<h3 id=\"flameutilfullscreen\" style=\"position:relative;\"><a href=\"#flameutilfullscreen\" aria-label=\"flameutilfullscreen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Flame.util.fullScreen()</code></h3>\n<p>When called, this disables all <code class=\"language-text\">SystemUiOverlay</code> making the app full screen.\nWhen called in the main method, makes your app full screen (no top nor bottom bars)</p>\n<h3 id=\"flameutilsetlandscape\" style=\"position:relative;\"><a href=\"#flameutilsetlandscape\" aria-label=\"flameutilsetlandscape permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Flame.util.setLandscape()</code></h3>\n<p>This method sets the orientation of the whole application (effectively, also the game) to landscape and depending on operating system and device setting, should allow both left and right landscape orientations. To set the app orientation to landscape on a specific direction, use either <code class=\"language-text\">Flame.util.setLandscapeLeftOnly</code> or <code class=\"language-text\">Flame.util.setLandscapeRightOnly</code>.</p>\n<h3 id=\"flameutilsetportrait\" style=\"position:relative;\"><a href=\"#flameutilsetportrait\" aria-label=\"flameutilsetportrait permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Flame.util.setPortrait()</code></h3>\n<p>This method sets the orientation of the whole application (effectively, also the game) to portrait and depending on operating system and device setting, should allow both up and down landscape orientations. To set the app orientation to portrait on a specific direction, use either <code class=\"language-text\">Flame.util.setPortraitUpOnly</code> or <code class=\"language-text\">Flame.util.setPortraitDownOnly</code>.</p>\n<h3 id=\"flameutilsetorientation-and-flameutilsetorientations\" style=\"position:relative;\"><a href=\"#flameutilsetorientation-and-flameutilsetorientations\" aria-label=\"flameutilsetorientation and flameutilsetorientations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Flame.util.setOrientation()</code> and <code class=\"language-text\">Flame.util.setOrientations()</code></h3>\n<p>If a finer control of the allowed orientations is required (without having to deal with <code class=\"language-text\">SystemChrome</code> directly), <code class=\"language-text\">setOrientation</code> (accepts a single <code class=\"language-text\">DeviceOrientation</code> as a parameter) and <code class=\"language-text\">setOrientations</code> (accepts a <code class=\"language-text\">List&lt;DeviceOrientation&gt;</code> for possible orientations) can be used.</p>\n<h3 id=\"flameutilinitialdimensions\" style=\"position:relative;\"><a href=\"#flameutilinitialdimensions\" aria-label=\"flameutilinitialdimensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Flame.util.initialDimensions()</code></h3>\n<p>Returns a <code class=\"language-text\">Future</code> with the dimension (<code class=\"language-text\">Size</code>) of the screen. This has to be done in a hacky way because of the reasons described in the code. If you are using <code class=\"language-text\">BaseGame</code>, you probably won't need to use these, as every <code class=\"language-text\">Component</code> will receive this information.</p>\n<p><strong>Note</strong>: Call this function first thing in an <code class=\"language-text\">async</code>hronous <code class=\"language-text\">main</code> and <code class=\"language-text\">await</code> its value to avoid the \"size bug\" that affects certain devices when building for production.</p>\n<h3 id=\"flameutiladdgesturerecognizer-and-flameutilremovegesturerecognizer\" style=\"position:relative;\"><a href=\"#flameutiladdgesturerecognizer-and-flameutilremovegesturerecognizer\" aria-label=\"flameutiladdgesturerecognizer and flameutilremovegesturerecognizer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">Flame.util.addGestureRecognizer()</code> and <code class=\"language-text\">Flame.util.removeGestureRecognizer()</code></h3>\n<p>These two functions help with registering (and de-registering) gesture recognizers so that the game can accept input. More about these two functions <a href=\"/docs//doc/input.md#Input\">here</a>.</p>\n<h3 id=\"other-functions\" style=\"position:relative;\"><a href=\"#other-functions\" aria-label=\"other functions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other functions</h3>\n<ul>\n<li><code class=\"language-text\">text</code>: discussed <a href=\"/docs//doc/text.md\">here</a></li>\n<li><code class=\"language-text\">drawWhere</code>: a very simple function that manually applies an offset to the <code class=\"language-text\">Canvas</code>, render stuff given via a function and then reset the <code class=\"language-text\">Canvas</code>, without using the <code class=\"language-text\">Canvas</code>' built-in <code class=\"language-text\">save</code>/<code class=\"language-text\">restore</code> functionality. This might be useful because <code class=\"language-text\">BaseGame</code> uses the state of the canvas, and you should not mess with it.</li>\n</ul>\n<h2 id=\"timer\" style=\"position:relative;\"><a href=\"#timer\" aria-label=\"timer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Timer</h2>\n<p>Flame provides a simple utility class to help you handle countdowns and event like events.</p>\n<p><strong>Countdown example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:ui'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/game.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/position.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/text_config.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/time.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyGame</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> TextConfig textConfig <span class=\"token operator\">=</span> <span class=\"token function\">TextConfig</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFFFFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">final</span> countdown <span class=\"token operator\">=</span> <span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">MyGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    countdown<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>double dt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    countdown<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>countdown<span class=\"token punctuation\">.</span><span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// do something ...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>Canvas canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    textConfig<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Countdown: ${countdown.current.toString()}\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">Position</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Interval example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:ui'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/game.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/position.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/text_config.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/time.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyGame</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Game</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> TextConfig textConfig <span class=\"token operator\">=</span> <span class=\"token function\">TextConfig</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFFFFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Timer interval<span class=\"token punctuation\">;</span>\n\n  int elapsedSecs <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">MyGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    interval <span class=\"token operator\">=</span> <span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> repeat<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      elapsedSecs <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    interval<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>double dt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    interval<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>Canvas canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    textConfig<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Elapsed time: $elapsedSecs\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Position</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Timer instances can also be used inside a <code class=\"language-text\">BaseGame</code> game by using the <code class=\"language-text\">TimerComponent</code> class.</p>\n<p><strong>Timer Component</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/time.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/components/timer_component.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/game.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyBaseGame</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseGame</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">MyBaseGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">TimerComponent</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> repeat<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10 seconds elapsed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"path":"/docs/util.md","title":"Util"}}},"pageContext":{}}}