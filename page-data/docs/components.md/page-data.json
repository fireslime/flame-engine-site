{"componentChunkName":"component---src-templates-doc-template-js","path":"/docs/components.md","result":{"data":{"markdownRemark":{"html":"<h1 id=\"components\" style=\"position:relative;\"><a href=\"#components\" aria-label=\"components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Components</h1>\n<p>This class represent a single object on the screen, being a floating rectangle or a rotating sprite.</p>\n<p>The base abstract class has the common expected methods update and render to be implemented.</p>\n<p>The intermediate inheritance <code class=\"language-text\">PositionComponent</code> adds <code class=\"language-text\">x</code>, <code class=\"language-text\">y</code>, <code class=\"language-text\">width</code>, <code class=\"language-text\">height</code> and <code class=\"language-text\">angle</code> to your Components, as well as some useful methods like distance and angleBetween.</p>\n<p>The most commonly used implementation, <code class=\"language-text\">SpriteComponent</code>, can be created with a <code class=\"language-text\">Sprite</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">    <span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame/components/component.dart'</span><span class=\"token punctuation\">;</span>\n\n    Sprite sprite <span class=\"token operator\">=</span> <span class=\"token function\">Sprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">'player.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token number\">128.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> SpriteComponent<span class=\"token punctuation\">.</span><span class=\"token function\">fromSprite</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> sprite<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// width, height, sprite</span>\n\n    <span class=\"token comment\">// screen coordinates</span>\n    player<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 0 by default</span>\n    player<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 0 by default</span>\n    player<span class=\"token punctuation\">.</span>angle <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 0 by default</span>\n\n    player<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// it will render only if the image is loaded and the x, y, width and height parameters are not null</span></code></pre></div>\n<p>In the event that you want to easily change the direction of your components rendering, you can also use\n<code class=\"language-text\">renderFlipX</code> and <code class=\"language-text\">renderFlipY</code> to flip anything drawn to canvas during <code class=\"language-text\">render(Canvas canvas)</code>.\nThis is available on all <code class=\"language-text\">PositionComponent</code> objects, and is especially useful on <code class=\"language-text\">SpriteComponent</code> and\n<code class=\"language-text\">AnimationComponent</code>. Simply set <code class=\"language-text\">component.renderFlipX = true</code> for example reverse the horizontal rendering.</p>\n<p>Every <code class=\"language-text\">Component</code> has a few other methods that you can optionally implement, that are used by the <code class=\"language-text\">BaseGame</code> class. If you are not using the base game, you can alternatively use these methods on your own game loop.</p>\n<p>The <code class=\"language-text\">resize</code> method is called whenever the screen is resized, and in the beginning once when the component is added via the <code class=\"language-text\">add</code> method. You need to apply here any changes to the x, y, width and height of your component, or any other changes, due to the screen resizing. You can start these variables here, as the sprite won't be rendered until everything is set.</p>\n<p>The <code class=\"language-text\">destroy</code> method can be implemented to return true and warn the <code class=\"language-text\">BaseGame</code> that your object is marked for destruction, and it will be remove after the current update loop. It will then no longer be rendered or updated.</p>\n<p>The <code class=\"language-text\">isHUD</code> method can be implemented to return true (default false) to make the <code class=\"language-text\">BaseGame</code> ignore the <code class=\"language-text\">camera</code> for this element.</p>\n<p>The <code class=\"language-text\">onMount</code> method can be overridden to run initialization code for the component. When this method is called, BaseGame ensures that all the mixins which would change this component behaviour are already resolved.</p>\n<p>The <code class=\"language-text\">onDestroy</code> method can be overridden to run code before the component is removed from the game.</p>\n<p>There are also other implementations:</p>\n<ul>\n<li>The <code class=\"language-text\">AnimationComponent</code> takes an <code class=\"language-text\">Animation</code> object and renders a cyclic animated sprite (more details about Animations <a href=\"/docs/images.md#Animation\">here</a>)</li>\n<li>The <code class=\"language-text\">SvgComponent</code> takes an <code class=\"language-text\">Svg</code> object and renders the SVG on the game</li>\n<li>The <code class=\"language-text\">ParallaxComponent</code> can render a parallax background with several frames</li>\n<li>The <code class=\"language-text\">Box2DComponent</code>, that has a physics engine built-in (using the <a href=\"https://github.com/google/box2d.dart\">Box2D</a> port for Dart)</li>\n</ul>\n<h2 id=\"animation-component\" style=\"position:relative;\"><a href=\"#animation-component\" aria-label=\"animation component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Animation Component</h2>\n<p>This component uses an instance of the <a href=\"/docs/images.md#Animation\">Animation</a> class to represent a Component that has a sprite that runs a single cyclic animation.</p>\n<p>This will create a simple three frame animation</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">    List<span class=\"token operator\">&lt;</span>Sprite<span class=\"token operator\">></span> sprites <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">'player_${i}.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player <span class=\"token operator\">=</span> <span class=\"token function\">AnimationComponent</span><span class=\"token punctuation\">(</span><span class=\"token number\">64.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animation<span class=\"token punctuation\">.</span>spriteList</span><span class=\"token punctuation\">(</span>sprites<span class=\"token punctuation\">,</span> stepTime<span class=\"token punctuation\">:</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you have a sprite sheet, you can use the <code class=\"language-text\">sequenced</code> constructor, identical to the one provided by the <code class=\"language-text\">Animation</code> class (check more details in <a href=\"/docs/images.md#Animation\">the appropriate section</a>):</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>player <span class=\"token operator\">=</span> AnimationComponent<span class=\"token punctuation\">.</span><span class=\"token function\">sequenced</span><span class=\"token punctuation\">(</span><span class=\"token number\">64.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64.0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'player.png'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you are not using <code class=\"language-text\">BaseGame</code>, don't forget this component needs to be update'd even if static, because the animation object needs to be ticked to move the frames.</p>\n<h2 id=\"svgcomponent\" style=\"position:relative;\"><a href=\"#svgcomponent\" aria-label=\"svgcomponent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SvgComponent</h2>\n<p>This component uses an instance of <code class=\"language-text\">Svg</code> class to represent a Component that has a svg that is rendered on the game:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">    Svg svg <span class=\"token operator\">=</span> <span class=\"token function\">Svg</span><span class=\"token punctuation\">(</span><span class=\"token string\">'android.svg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    SvgComponent android <span class=\"token operator\">=</span> SvgComponent<span class=\"token punctuation\">.</span><span class=\"token function\">fromSvg</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> svg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    android<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    android<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"flareactor-component\" style=\"position:relative;\"><a href=\"#flareactor-component\" aria-label=\"flareactor component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FlareActor Component</h2>\n<p><em>Note</em>: The previous implementation of a Flare integration API using <code class=\"language-text\">FlareAnimation</code> and <code class=\"language-text\">FlareComponent</code> has been deprecated.</p>\n<p>To use Flare within Flame, use the <a href=\"https://github.com/flame-engine/flame_flare\"><code class=\"language-text\">flame_flare</code></a> package.</p>\n<p>This is the interface to use a <a href=\"https://pub.dev/packages/flare_flutter\">flare animation</a> within flame.\n<code class=\"language-text\">FlareActorComponent</code> has almost the same API as of flare's FlareActor widget. It receives the animation filename (that are loaded by default with <code class=\"language-text\">Flame.bundle</code>),\nit also can receive a FlareController that can play multiple animations and control nodes.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">    <span class=\"token keyword\">import</span> <span class=\"token string\">'package:flame_flare/flame_flare.dart'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// your implementation of FlareController</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">WashingtonController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FlareControls</span> <span class=\"token punctuation\">{</span>\n        \n        ActorNode rightHandNode<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>FlutterActorArtboard artboard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>artboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            <span class=\"token comment\">// get flare node</span>\n            rightHand <span class=\"token operator\">=</span> artboard<span class=\"token punctuation\">.</span><span class=\"token function\">getNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'right_hand'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">final</span> fileName <span class=\"token operator\">=</span> <span class=\"token string\">'assets/george_washington.flr'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> width <span class=\"token operator\">=</span> <span class=\"token number\">1776</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> height <span class=\"token operator\">=</span> <span class=\"token number\">1804</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> controller <span class=\"token operator\">=</span> <span class=\"token function\">WashingtonController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//instantiate controller</span>\n    \n    FlareActorComponent flareAnimation <span class=\"token operator\">=</span> <span class=\"token function\">FlareActorComponent</span><span class=\"token punctuation\">(</span>\n      fileName<span class=\"token punctuation\">,</span>\n      controller<span class=\"token punctuation\">:</span> controller<span class=\"token punctuation\">,</span>\n      width<span class=\"token punctuation\">:</span> <span class=\"token number\">306</span><span class=\"token punctuation\">,</span>\n      height<span class=\"token punctuation\">:</span> <span class=\"token number\">228</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    flareAnimation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n    flareAnimation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">240</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>flareAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// to play an animation</span>\n    controller<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rise_up'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// you can add another animation to play at the same time</span>\n    controller<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">'close_door_way_out'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// also, get a flare node and modify it</span>\n    controller<span class=\"token punctuation\">.</span>rightHandNode<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can also change the current playing animation using the <code class=\"language-text\">updateAnimation</code> method.</p>\n<p>For a working example, check this <a href=\"https://github.com/flame-engine/flame/blob/master/doc/examples/flare/lib/main_component.dart\">source file</a>.</p>\n<h2 id=\"composed-component\" style=\"position:relative;\"><a href=\"#composed-component\" aria-label=\"composed component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Composed component</h2>\n<p>A mixin that helps you to make a <code class=\"language-text\">Component</code> wraps other components. It is useful to group visual components through a hierarchy. When implemented, makes every item in its <code class=\"language-text\">components</code> collection field be updated and rendered with the same conditions.</p>\n<p>Example of usage, where visibility of two components are handled by a wrapper:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">GameOverPanel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PositionComponent</span> <span class=\"token keyword\">with</span> Resizable<span class=\"token punctuation\">,</span> ComposedComponent <span class=\"token punctuation\">{</span>\n  bool visible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  GameOverText gameOverText<span class=\"token punctuation\">;</span>\n  GameOverButton gameOverButton<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">GameOverPanel</span><span class=\"token punctuation\">(</span>Image spriteImage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gameOverText <span class=\"token operator\">=</span> <span class=\"token function\">GameOverText</span><span class=\"token punctuation\">(</span>spriteImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GameOverText is a Component</span>\n    gameOverButton <span class=\"token operator\">=</span> <span class=\"token function\">GameOverButton</span><span class=\"token punctuation\">(</span>spriteImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GameOverRestart is a SpriteComponent</span>\n\n    components<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>gameOverText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>gameOverButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>Canvas canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>visible<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token comment\">// If not, neither of its `components` will be rendered</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"parallax-component\" style=\"position:relative;\"><a href=\"#parallax-component\" aria-label=\"parallax component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parallax Component</h2>\n<p>This Component can be used to render pretty backgrounds by drawing several transparent images on top of each other, each dislocated by a tiny amount.</p>\n<p>The rationale is that when you look at the horizon and moving, closer objects seem to move faster than distant ones.</p>\n<p>This component simulates this effect, making a more realistic background with a feeling of depth.</p>\n<p>Create it like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">  <span class=\"token keyword\">final</span> images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">ParallaxImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mountains.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ParallaxImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'forest.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ParallaxImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'city.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bg <span class=\"token operator\">=</span> <span class=\"token function\">ParallaxComponent</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This creates a static background, if you want it to move you have to set the named optional parameters <code class=\"language-text\">baseSpeed</code> and <code class=\"language-text\">layerDelta</code>. For example if you want to move your background images along the X-axis and have the images further away you would do the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bg <span class=\"token operator\">=</span> <span class=\"token function\">ParallaxComponent</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">,</span> baseSpeed<span class=\"token punctuation\">:</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layerDelta<span class=\"token punctuation\">:</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can set the baseSpeed and layerDelta at any time, for example if your character jumps or your game speeds up.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bg<span class=\"token punctuation\">.</span>baseSpeed <span class=\"token operator\">=</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bg<span class=\"token punctuation\">.</span>layerDelta <span class=\"token operator\">=</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>By default the images are aligned to the bottom left, repeated along the X-axis and scaled proportionally so that the image covers the height of the screen. If you want to change this behaviour, for example if you are not making a side scrolling game, you can set the <code class=\"language-text\">repeat</code>, <code class=\"language-text\">alignment</code> and <code class=\"language-text\">fill</code> parameters for each ParallaxImage.</p>\n<p>Advanced example:</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">  <span class=\"token keyword\">final</span> images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">ParallaxImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stars.jpg'</span><span class=\"token punctuation\">,</span> repeat<span class=\"token punctuation\">:</span> ImageRepeat<span class=\"token punctuation\">.</span>repeat<span class=\"token punctuation\">,</span> alignment<span class=\"token punctuation\">:</span> Alignment<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span> fill<span class=\"token punctuation\">:</span> LayerFill<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ParallaxImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'planets.jpg'</span><span class=\"token punctuation\">,</span> repeat<span class=\"token punctuation\">:</span> ImageRepeat<span class=\"token punctuation\">.</span>repeatY<span class=\"token punctuation\">,</span> alignment<span class=\"token punctuation\">:</span> Alignment<span class=\"token punctuation\">.</span>bottomLeft<span class=\"token punctuation\">,</span> fill<span class=\"token punctuation\">:</span> LayerFill<span class=\"token punctuation\">.</span>none<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ParallaxImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dust.jpg'</span><span class=\"token punctuation\">,</span> repeat<span class=\"token punctuation\">:</span> ImageRepeat<span class=\"token punctuation\">.</span>repeatX<span class=\"token punctuation\">,</span> alignment<span class=\"token punctuation\">:</span> Alignment<span class=\"token punctuation\">.</span>topRight<span class=\"token punctuation\">,</span> fill<span class=\"token punctuation\">:</span> LayerFill<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>bg <span class=\"token operator\">=</span> <span class=\"token function\">ParallaxComponent</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">,</span> baseSpeed<span class=\"token punctuation\">:</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layerDelta<span class=\"token punctuation\">:</span> <span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>The stars image in this example will be repeatedly drawn in both axis, align in the center and be scaled to fill the screen width.</li>\n<li>The planets image will be repeated in Y-axis, aligned to the bottom left of the screen and not be scaled.</li>\n<li>The dust image will be repeated in X-axis, aligned to the top right and scaled to fill the screen height.</li>\n</ul>\n<p>Once you are done with setting the parameters to your needs, render the ParallaxComponent as any other component.</p>\n<p>Like the AnimationComponent, even if your parallax is static, you must call update on this component, so it runs its animation.\nAlso, don't forget to add you images to the <code class=\"language-text\">pubspec.yaml</code> file as assets or they wont be found.</p>\n<p>An example implementation can be found in the <a href=\"https://github.com/flame-engine/flame/blob/master/doc/examples/parallax\">examples directory</a>.</p>\n<h2 id=\"box2d-component\" style=\"position:relative;\"><a href=\"#box2d-component\" aria-label=\"box2d component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Box2D Component</h2>\n<p>Flame comes with a basic integration with the Flutter implementation of <a href=\"https://github.com/google/box2d.dart\">Box2D</a>.</p>\n<p>The whole concept of a box2d's World is mapped to the <code class=\"language-text\">Box2DComponent</code> component; every Body should be a <code class=\"language-text\">BodyComponent</code>, and added directly to the <code class=\"language-text\">Box2DComponent</code>, and not to the game list.</p>\n<p>So you can have HUD and other non-physics-related components in your game list, and also as many <code class=\"language-text\">Box2DComponents</code> as you'd like (normally one, I guess), and then add your physical entities to your Components instance. When the Component is updated, it will use box2d physics engine to properly update every child.</p>\n<p>You can see a more complete example of box2d usage on <a href=\"https://github.com/feroult/haunt\">this WIP game</a> made by @feroult (beware, though, it uses 0.6.x version of flame, but the Box2D related apis are unchanged).</p>\n<p>More information about Box2D can be found <a href=\"/docs/box2d.md\">here</a>.</p>\n<h2 id=\"tiled-component\" style=\"position:relative;\"><a href=\"#tiled-component\" aria-label=\"tiled component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tiled Component</h2>\n<p>Currently we have a very basic implementation of a Tiled component. This API uses the lib <a href=\"https://github.com/feroult/tiled.dart\">Tiled</a> to parse map files and render visible layers.</p>\n<p>An example of how to use the API can be found <a href=\"https://github.com/flame-engine/flame/blob/master/doc/examples/tiled\">here</a>.</p>\n<h1 id=\"nine-tile-box-component\" style=\"position:relative;\"><a href=\"#nine-tile-box-component\" aria-label=\"nine tile box component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nine Tile Box Component</h1>\n<p>A Nine Tile Box is a rectangle drawn using a grid sprite.</p>\n<p>The grid sprite is a 3x3 grid and with 9 blocks, representing the 4 corners, the 4 sides and the middle.</p>\n<p>The corners are drawn at the same size, the sides are stretched on the side direction and the middle is expanded both ways.</p>\n<p>Using this, you can get a box/rectangle that expands well to any sizes. This is useful for making panels, dialogs, borders.</p>\n<p>Check the example app <code class=\"language-text\">nine_tile_box</code> details on how to use it.</p>\n<h2 id=\"effects\" style=\"position:relative;\"><a href=\"#effects\" aria-label=\"effects permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Effects</h2>\n<p>Flame provides a set of effects that can be applied to a certain type of components, these effects can be used to animate some properties of your components, like position or dimensions. You can check the list of those effects <a href=\"/docs/effects.md\">here</a>.</p>\n<p>Examples of the running effects can be found <a href=\"https://github.com/flame-engine/flame/blob/master/doc/examples/effects\">here</a>;</p>","frontmatter":{"path":"/docs/components.md","title":"Components"}}},"pageContext":{}},"staticQueryHashes":["3000541721","3000541721","3595947586"]}